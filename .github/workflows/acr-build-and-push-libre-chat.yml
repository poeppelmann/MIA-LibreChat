name: Build and Push MIA - LibreChat Container to ACR

on:
  push:
    branches:
      - main
      - feat/MIA-85-librechat-build-pipeline-gh-action
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: api-build
            file: Dockerfile.multi
            image_name: mia-libre-chat-api
          - target: node
            file: Dockerfile
            image_name: mia-libre-chat

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch tags and set the latest tag
        run: |
          git fetch --tags
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Login to ACR
        run: |
          az acr login --name ${{ vars.ACR_NAME }}

      # Set up QEMU for multi-arch build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Prepare the environment
      - name: Prepare environment
        run: |
          cp .env.example .env

      # Build and push Docker images for each target
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          registries: ${{ vars.ACR_REGISTRY_SERVER }}
          tags: |
            ${{ vars.ACR_REGISTRY_SERVER }}/${{ matrix.image_name }}:${{ env.LATEST_TAG }}
            ${{ vars.ACR_REGISTRY_SERVER }}/${{ matrix.image_name }}:latest
            ${{ vars.ACR_REGISTRY_SERVER }}/${{ matrix.image_name }}:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          target: ${{ matrix.target }}